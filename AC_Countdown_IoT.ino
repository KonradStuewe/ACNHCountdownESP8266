#include <Arduino.h>
#include <U8g2lib.h>
#include <ESP8266WiFi.h>
#include <NTPClient.h>
#include <WiFiUdp.h>
#include <TimeLib.h>
#include <Wire.h>


U8G2_SH1106_128X64_NONAME_F_HW_I2C u8g2_big(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);
U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2_small(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);
U8G2_SH1106_128X64_NONAME_1_HW_I2C picture(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);

#define u8g2_logo_97x51_width 96
#define u8g2_logo_97x51_height 64
static const unsigned char u8g2_logo_97x51_bits[] U8X8_PROGMEM = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x3F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x3F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x3F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0x3F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0xE0, 0xFF, 0xFF, 0xFF, 0x3F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x03, 0x70, 0xDB, 0xF6, 0xFF, 0x7F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xF6, 0x3F, 0x78, 0xAA, 0xF0, 0xFF, 0x4F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x7F, 0x7C, 0x88, 0xF0, 0x7F, 0x40, 
  0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x7D, 0x81, 0xFD, 0x03, 0x40, 
  0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x7C, 0xF3, 0x03, 0x00, 0x0C, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xBF, 0xFF, 0xFC, 0x1F, 0x10, 0xD8, 0x0D, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFA, 0x88, 0x00, 0x80, 0x55, 0x92, 
  0x00, 0x00, 0x00, 0x00, 0xE0, 0x9F, 0xF8, 0x0F, 0x09, 0x2E, 0x65, 0x9A, 
  0x00, 0x00, 0x00, 0x80, 0xFF, 0x87, 0xF0, 0x0F, 0xC9, 0xA3, 0x1C, 0x80, 
  0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xCF, 0xF9, 0x0F, 0x3F, 0xA5, 0x03, 0x70, 
  0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xE7, 0xF0, 0x0F, 0x53, 0x05, 0xC0, 0x03, 
  0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0x1F, 0xF8, 0x0F, 0xD2, 0x00, 0x7F, 0x00, 
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xF8, 0x1F, 0x02, 0xFC, 0xFF, 0x00, 
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFD, 0xFF, 0xF0, 0xFF, 0xFF, 0x00, 
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xF8, 0x01, 
  0x80, 0xFF, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x01, 
  0xC0, 0x0F, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x03, 
  0xE0, 0x0F, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x03, 
  0x00, 0x7F, 0xF8, 0xFF, 0xFF, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0x7C, 0x00, 
  0x00, 0x3F, 0xF9, 0xC3, 0xF8, 0x78, 0xF8, 0xFF, 0xCF, 0xFF, 0x7C, 0x00, 
  0x00, 0x3F, 0xF3, 0x4F, 0xF0, 0xF9, 0x88, 0xFF, 0x03, 0x7F, 0x3E, 0x00, 
  0x00, 0x3F, 0xF3, 0x8F, 0xF3, 0xFF, 0x01, 0xE1, 0x7F, 0x7E, 0x3E, 0x00, 
  0x00, 0x3F, 0xF3, 0xCF, 0xE7, 0xFF, 0x38, 0xC4, 0xFF, 0x7C, 0x3E, 0x00, 
  0x00, 0x3F, 0xE7, 0xCF, 0x67, 0xF0, 0x38, 0xCE, 0xE7, 0x7C, 0x3E, 0x00, 
  0x00, 0x1F, 0xE7, 0xCF, 0xE7, 0xF3, 0x38, 0xCF, 0x03, 0x7C, 0x3E, 0x00, 
  0x00, 0x1E, 0xC0, 0xCF, 0xE7, 0xF3, 0x38, 0xCF, 0x71, 0x3C, 0x1E, 0x00, 
  0x00, 0x1E, 0xC0, 0xCF, 0xE7, 0xF3, 0x38, 0xCF, 0xF9, 0x3C, 0x1F, 0x00, 
  0x00, 0x9F, 0xCF, 0xCF, 0xE7, 0xF3, 0x38, 0xCF, 0x79, 0x3E, 0x1F, 0x00, 
  0xC0, 0x9F, 0x8F, 0xCF, 0xE7, 0xF3, 0x38, 0xCF, 0x79, 0x3E, 0xFF, 0x01, 
  0xC0, 0x9F, 0x9F, 0xC7, 0xC7, 0x73, 0x3C, 0xCF, 0x03, 0x1E, 0xFF, 0x01, 
  0x80, 0x8F, 0x03, 0xFE, 0xFF, 0x73, 0x3C, 0x8F, 0x7F, 0x0C, 0xFF, 0x03, 
  0x80, 0xC7, 0x03, 0xFE, 0xFF, 0xE0, 0x3F, 0x8C, 0xFF, 0x3F, 0xFE, 0x03, 
  0x80, 0xC7, 0xFF, 0xFF, 0xFF, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 
  0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC7, 0x03, 
  0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0xFF, 0xFF, 0xE3, 0x07, 
  0xF0, 0xC3, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0xFF, 0x3F, 0xE0, 0x07, 
  0xF0, 0x00, 0xFC, 0xFF, 0xF9, 0x03, 0xFF, 0xFF, 0xFF, 0x0F, 0xE1, 0x07, 
  0x78, 0x38, 0xFE, 0x3F, 0xE0, 0x11, 0xFF, 0xFF, 0xFF, 0xCF, 0xE7, 0x07, 
  0x3C, 0xFE, 0xFE, 0x1F, 0xC7, 0x39, 0xFF, 0xE1, 0xFF, 0xC7, 0xE7, 0x03, 
  0x1C, 0xFF, 0xFF, 0x9F, 0xCF, 0xF9, 0x9F, 0xE1, 0xFE, 0xE7, 0xC7, 0x07, 
  0x9F, 0xFF, 0xFF, 0xCF, 0x9F, 0xF9, 0x81, 0xE7, 0x38, 0xE7, 0xCF, 0x07, 
  0x8F, 0xFF, 0x21, 0xCE, 0x9F, 0xF3, 0x98, 0xE7, 0x0B, 0xC6, 0xC7, 0x07, 
  0x8F, 0xFF, 0x87, 0xCC, 0x9F, 0xE7, 0xFC, 0xE7, 0xE1, 0xCC, 0xC7, 0x07, 
  0xCF, 0xFF, 0xE7, 0xC9, 0x9F, 0xCF, 0xFC, 0xE7, 0xF1, 0x1C, 0x90, 0x07, 
  0xCF, 0xFF, 0xE7, 0x9D, 0xCF, 0xDD, 0xF9, 0xE7, 0xF9, 0x7C, 0x9C, 0x0F, 
  0xCF, 0xFF, 0xE7, 0x1F, 0xE3, 0xCD, 0xF3, 0xE7, 0xF9, 0xFC, 0x9F, 0x0F, 
  0x8F, 0xFF, 0xE7, 0x7F, 0xF0, 0xC1, 0xCF, 0xE3, 0xF9, 0xFC, 0x9F, 0x0F, 
  0x9F, 0xFF, 0xE7, 0xFF, 0xFF, 0xFF, 0x9F, 0xC1, 0xF9, 0xFC, 0xB0, 0x0F, 
  0x1E, 0xFF, 0xE7, 0xFF, 0xFF, 0xFF, 0x9D, 0xFF, 0xF9, 0xFC, 0xBC, 0x0F, 
  0x3E, 0x9C, 0xEF, 0xFF, 0xFF, 0xFF, 0x9D, 0xFF, 0xF9, 0xFC, 0x9C, 0x0F, 
  0xFC, 0x80, 0x03, 0xFF, 0xFF, 0xFF, 0xC3, 0xFF, 0xF8, 0xF8, 0xC0, 0x0F, 
  0xFC, 0xFF, 0xFB, 0x9F, 0x1F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xE3, 0x07, 
  0xF8, 0xFF, 0xFF, 0x1F, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 
  0xF0, 0xFF, 0xFF, 0x1F, 0x00, 0xC0, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0x03, 
  0xE0, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0xFF, 0xF9, 0xFF, 0xFF, 0xFF, 0x01, 
  0x80, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x7C, 0xF0, 0xFF, 0xFF, 0xFF, 0x00, 
  0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
  };

#Replace these with your ssid and password

char ssid[] = "ADD-SSID-HERE";
char pass[] = "ADD-PASSWORD-HERE";

WiFiUDP ntpUDP;

NTPClient timeClient(ntpUDP, "0.de.pool.ntp.org", 3600, 60000);

int value;

void TCA9548A(uint8_t bus)
{
  Wire.beginTransmission(0x70);
  Wire.write(1 << bus);
  Wire.endTransmission();
}

void setup(void) {
  Serial.begin(74880);
  pinMode(LED_BUILTIN, OUTPUT);
  pinMode(A0, INPUT);
  delay(10);

  
  TCA9548A(0);
  u8g2_big.begin();
  TCA9548A(1);
  u8g2_small.begin();
  TCA9548A(2);
  u8g2_small.begin();
  TCA9548A(3);
  u8g2_small.begin();
  
  TCA9548A(4);
  picture.begin();
  picture.setDisplayRotation(U8G2_R2);
  picture.firstPage();
  do {
    picture.setFont(u8g2_font_ncenB14_tr);
    picture.drawXBMP(16,0, u8g2_logo_97x51_width, u8g2_logo_97x51_height, u8g2_logo_97x51_bits);
  } while ( picture.nextPage() );

  TCA9548A(5);
  u8g2_big.begin();
  u8g2_big.setDisplayRotation(U8G2_R2);
  u8g2_big.setFont(u8g2_font_osb29_tr);
  u8g2_big.setCursor(12,32);
  u8g2_big.print("Count");
  u8g2_big.setCursor(18,64);
  u8g2_big.print("down");
  u8g2_big.sendBuffer();

  TCA9548A(6);
  u8g2_small.begin();
  u8g2_small.setDisplayRotation(U8G2_R2);
  u8g2_small.setFont(u8g2_font_osb29_tr);
  u8g2_small.setCursor(15,32);
  u8g2_small.print("20.03");
  u8g2_small.setCursor(20,64);
  u8g2_small.print("2020");
  u8g2_small.sendBuffer();
  u8g2_small.setDisplayRotation(U8G2_R0);
  
  TCA9548A(0);
  u8g2_big.begin();
  u8g2_big.setDisplayRotation(U8G2_R0);

  
  Serial.println();
  Serial.println();
  Serial.print("Connecting to...");
  Serial.println(ssid);

  WiFi.begin(ssid, pass);

  char wait[] = "Connecting";

  delay(10);
  
  TCA9548A(0);
  u8g2_big.setFont(u8g2_font_ncenB08_tr);
  while (WiFi.status() != WL_CONNECTED) {
    delay(250);
    Serial.print(".");

    u8g2_big.setCursor(0,10);
    u8g2_big.print(wait);
    u8g2_big.sendBuffer();
    strcat(wait, ".");

    digitalWrite(LED_BUILTIN, LOW);
    delay(250);
    digitalWrite(LED_BUILTIN, HIGH);
  }

  
  Serial.println("");
  Serial.println("Wi-Fi connected successfully");

  timeClient.begin();
}

void loop(void) {
  timeClient.update();
  int utcCalc = 1584662400 - timeClient.getEpochTime();

  TCA9548A(0);
  
  u8g2_big.clearBuffer();
  u8g2_big.setFont(u8g2_font_inb63_mn);
  u8g2_big.setFontDirection(0);
  u8g2_big.setCursor(0,64);
  u8g2_big.print(String(utcCalc / 60 / 60 / 24));
  u8g2_big.setFont(u8g2_font_crox4t_tr);
  u8g2_big.setFontDirection(1);
  u8g2_big.drawStr(110,0,"Days");
  u8g2_big.sendBuffer();

  TCA9548A(1);

  u8g2_small.clearBuffer();
  u8g2_small.setFont(u8g2_font_inb63_mn);
  u8g2_small.setFontDirection(0);
  u8g2_small.setCursor(0,64);
  u8g2_small.print(String(hour(utcCalc)));
  u8g2_small.setFont(u8g2_font_crox4t_tr);
  u8g2_small.setFontDirection(1);
  u8g2_small.drawStr(110,0,"Hours");
  u8g2_small.sendBuffer();

  TCA9548A(2);

  u8g2_small.clearBuffer();
  u8g2_small.setFont(u8g2_font_inb63_mn);
  u8g2_small.setFontDirection(0);
  u8g2_small.setCursor(0,64);
  u8g2_small.print(String(minute(utcCalc)));
  u8g2_small.setFont(u8g2_font_crox4t_tr);
  u8g2_small.setFontDirection(1);
  u8g2_small.drawStr(110,0,"Minutes");
  u8g2_small.sendBuffer();

  TCA9548A(3);

  u8g2_small.clearBuffer();
  u8g2_small.setFont(u8g2_font_inb63_mn);
  u8g2_small.setFontDirection(0);
  u8g2_small.setCursor(0,64);
  u8g2_small.print(String(second(utcCalc)));
  u8g2_small.setFont(u8g2_font_crox4t_tr);
  u8g2_small.setFontDirection(1);
  u8g2_small.drawStr(110,0,"Seconds");
  u8g2_small.sendBuffer();
  
  delay(400);  
}
